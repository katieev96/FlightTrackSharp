// <auto-generated />
using System;
using FlightTrackSharp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlightTrackSharp.Migrations
{
    [DbContext(typeof(FlightTrackContext))]
    [Migration("20190630010418_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FlightTrackSharp.Models.Aircraft", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AircraftManufacturerId");

                    b.Property<Guid?>("AircraftModelId");

                    b.Property<string>("Country");

                    b.Property<string>("EngineType");

                    b.Property<int>("NumEngines");

                    b.Property<string>("TailNumber");

                    b.HasKey("Id");

                    b.HasIndex("AircraftManufacturerId");

                    b.HasIndex("AircraftModelId");

                    b.ToTable("Aircraft");
                });

            modelBuilder.Entity("FlightTrackSharp.Models.AircraftManufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("AircraftManufacturer");
                });

            modelBuilder.Entity("FlightTrackSharp.Models.AircraftModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("AircraftModel");
                });

            modelBuilder.Entity("FlightTrackSharp.Models.FlightInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AircraftId");

                    b.Property<int>("Approaches");

                    b.Property<bool>("ApproachesHold");

                    b.Property<double>("CFI");

                    b.Property<string>("Comments");

                    b.Property<double>("CrossCountry");

                    b.Property<DateTime>("DateOfFlight");

                    b.Property<double>("Dual");

                    b.Property<double>("FullStopDay");

                    b.Property<double>("FullStopNight");

                    b.Property<double>("GroundSim");

                    b.Property<double>("IMC");

                    b.Property<double>("Night");

                    b.Property<double>("PIC");

                    b.Property<string>("Route");

                    b.Property<double>("SIC");

                    b.Property<double>("SimulatedInstrument");

                    b.Property<double>("Solo");

                    b.Property<double>("TotalLandings");

                    b.Property<double>("TotalTime");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId");

                    b.ToTable("FlightInformation");
                });

            modelBuilder.Entity("FlightTrackSharp.Models.Aircraft", b =>
                {
                    b.HasOne("FlightTrackSharp.Models.AircraftManufacturer", "AircraftManufacturer")
                        .WithMany("Aircraft")
                        .HasForeignKey("AircraftManufacturerId");

                    b.HasOne("FlightTrackSharp.Models.AircraftModel", "AircraftModel")
                        .WithMany()
                        .HasForeignKey("AircraftModelId");
                });

            modelBuilder.Entity("FlightTrackSharp.Models.FlightInformation", b =>
                {
                    b.HasOne("FlightTrackSharp.Models.Aircraft", "Aircraft")
                        .WithMany()
                        .HasForeignKey("AircraftId");
                });
#pragma warning restore 612, 618
        }
    }
}
